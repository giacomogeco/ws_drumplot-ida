function y=transfer_restore(x,tau,h,smp)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function transfer_response (x,tau,h,smp) calcola la funzione di risposta% di un sistema oscillante smorzato con periodo tau e smorzamento h.% smp e' il numero di campioni al secondo.% Le equazioni sono quelle di pag. 177 del Lay and Wallace%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nd=size(x);if nd(1)>nd(2)    x=x';end%................ calcola il range di frequenzan=length(x);nf=fix(n/2);n=nf*2;fo=smp/n;f=fo*(1:nf);%.....funzione di trasferimento del sismometro utilizzatow=2*pi.*f;w2=w.*w;wo=2*pi/tau;a=2*h*wo.*w;b=(w2-wo^2);Bo=w2./(sqrt((w2-wo^2).^2+4*h^2*wo^2.*w2));Wo=atan2(a,b)-pi/2;size(Bo);% figure% subplot (2,1,1), semilogx(f,Bo), grid, xlabel('frequency (Hz)'), ylabel('amplitude')% subplot (2,1,2), semilogx(f,Wo), grid, xlabel('frequency (Hz)'), ylabel('phase')% %................ funzione di risposta del sismometro% Gf=fft(G,n);% Bo=sqrt(Gf(1:nf).*conj(Gf(1:nf)));% Wo=atan2(imag(Gf(1:nf)),real(Gf(1:nf)));% % size(Bo)% % figure% subplot (2,1,1), semilogx(f,Bo), grid, xlabel('frequency (Hz)'), ylabel('amplitude')% subplot (2,1,2), semilogx(f,Wo), grid, xlabel('frequency (Hz)'), ylabel('phase')% %.............. funzione di trasferimento simulata per un Wood-Andersontau=0.8;h=0.8;w=2*pi.*f;w2=w.*w;wo=2*pi/tau;a=2*h*wo.*w;b=(w2-wo^2);B=w2./(sqrt((w2-wo^2).^2+4*h^2*wo^2.*w2));W=atan2(a,b)-pi/2;size(B);% figure% subplot (2,1,1), semilogx(f,B), grid, xlabel('frequency (Hz)'), ylabel('amplitude')% subplot (2,1,2), semilogx(f,W), grid, xlabel('frequency (Hz)'), ylabel('phase')%............. spettro di correzioneB=B./Bo;W=W-Wo;% figure% subplot (2,1,1), semilogx(f,B), grid, xlabel('frequency (Hz)'), ylabel('amplitude')% subplot (2,1,2), semilogx(f,W), grid, xlabel('frequency (Hz)'), ylabel('phase')%............ raddoppia lo spettro per la IFFTBf=fliplr(B);Wf=fliplr(W);B(nf+1:2*nf)=Bf;W(nf+1:2*nf)=Wf;%............ calcola lo spettro della registrazione sismicaX=fft(x,n);R=sqrt(X.*conj(X));T=atan2(imag(X),real(X));%.......... correggi lo spettro della registrazioneB=B.*R;W=W+T;%.......... calcola i coefficenti di Fourieri=sqrt(-1);F=B.*exp(i*W);%......... esegue la trasformata Inversa di FourierH=ifft(F);y=real(H);%figure%plot(x), hold on, plot(y,'r')return